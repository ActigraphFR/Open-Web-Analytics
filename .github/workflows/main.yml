name: Package Release
on: 
  workflow_dispatch:
    inputs:
      version:
        description: The version name of the release (e.g. 1.1.5)
        required: true
        default: ''
jobs:
  tag:
    name: New release
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.event.inputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: master
    - uses: actions/checkout@v2
    - run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git -C ./ checkout -b release-${{ env.VERSION }}
        echo changing version string in owa_env.php
        sed -i "s/master/${{ env.VERSION }}/g" owa_env.php
        sed -i 's/"version": "1.0.0",/"version": "${{ env.VERSION }}",/g' package.json
        cat ./owa_env.php
        cat ./package.json
        echo Committing local changes
        git -C ./ status
        git -C ./ add owa_env.php
        git -C ./ add package.json
        git -C ./ commit -m "Updating version string."
        echo Pushing change into Branch
        git -C ./ push --set-upstream origin release-${{ env.VERSION }}
    - name: Composer (php-actions)
      uses: php-actions/composer@v1
    - name: npm 
      uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Build
      run: |
        npm install
        npm run build
    
    - name: tarball generation
      run: |
        tar --directory ./ --exclude='./composer.json' --exclude='./composer.lock' --exclude='./package.lock' --exclude='./package.json' --exclude='./webpack.conf.js' --exclude='./modules/base/src' --exclude='./node_modules' --exclude='./.gitignore' --exclude='./.github' --exclude='./.git' --exclude='./owa_${{ env.VERSION}}_packaged.tar' -pcvf ./owa_${{ env.VERSION}}_packaged.tar ./
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        commitish: release-${{ env.VERSION }}
        tag_name: ${{ env.VERSION }}-test
        release_name: Release ${{ env.VERSION }}-test
        body: |
           Changes in this Release
            - First Change
            - Second Change
        draft: true
        prerelease: false
        